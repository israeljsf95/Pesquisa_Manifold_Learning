clear all, clc

iris = [5.1,3.5,1.4,0.2,1
4.9,3.0,1.4,0.2,1
4.7,3.2,1.3,0.2,1
4.6,3.1,1.5,0.2,1
5.0,3.6,1.4,0.2,1
5.4,3.9,1.7,0.4,1
4.6,3.4,1.4,0.3,1
5.0,3.4,1.5,0.2,1
4.4,2.9,1.4,0.2,1
4.9,3.1,1.5,0.1,1
5.4,3.7,1.5,0.2,1
4.8,3.4,1.6,0.2,1
4.8,3.0,1.4,0.1,1
4.3,3.0,1.1,0.1,1
5.8,4.0,1.2,0.2,1
5.7,4.4,1.5,0.4,1
5.4,3.9,1.3,0.4,1
5.1,3.5,1.4,0.3,1
5.7,3.8,1.7,0.3,1
5.1,3.8,1.5,0.3,1
5.4,3.4,1.7,0.2,1
5.1,3.7,1.5,0.4,1
4.6,3.6,1.0,0.2,1
5.1,3.3,1.7,0.5,1
4.8,3.4,1.9,0.2,1
5.0,3.0,1.6,0.2,1
5.0,3.4,1.6,0.4,1
5.2,3.5,1.5,0.2,1
5.2,3.4,1.4,0.2,1
4.7,3.2,1.6,0.2,1
4.8,3.1,1.6,0.2,1
5.4,3.4,1.5,0.4,1
5.2,4.1,1.5,0.1,1
5.5,4.2,1.4,0.2,1
4.9,3.1,1.5,0.1,1
5.0,3.2,1.2,0.2,1
5.5,3.5,1.3,0.2,1
4.9,3.1,1.5,0.1,1
4.4,3.0,1.3,0.2,1
5.1,3.4,1.5,0.2,1
5.0,3.5,1.3,0.3,1
4.5,2.3,1.3,0.3,1
4.4,3.2,1.3,0.2,1
5.0,3.5,1.6,0.6,1
5.1,3.8,1.9,0.4,1
4.8,3.0,1.4,0.3,1
5.1,3.8,1.6,0.2,1
4.6,3.2,1.4,0.2,1
5.3,3.7,1.5,0.2,1
5.0,3.3,1.4,0.2,1
7.0,3.2,4.7,1.4,2
6.4,3.2,4.5,1.5,2
6.9,3.1,4.9,1.5,2
5.5,2.3,4.0,1.3,2
6.5,2.8,4.6,1.5,2
5.7,2.8,4.5,1.3,2
6.3,3.3,4.7,1.6,2
4.9,2.4,3.3,1.0,2
6.6,2.9,4.6,1.3,2
5.2,2.7,3.9,1.4,2
5.0,2.0,3.5,1.0,2
5.9,3.0,4.2,1.5,2
6.0,2.2,4.0,1.0,2
6.1,2.9,4.7,1.4,2
5.6,2.9,3.6,1.3,2
6.7,3.1,4.4,1.4,2
5.6,3.0,4.5,1.5,2
5.8,2.7,4.1,1.0,2
6.2,2.2,4.5,1.5,2
5.6,2.5,3.9,1.1,2
5.9,3.2,4.8,1.8,2
6.1,2.8,4.0,1.3,2
6.3,2.5,4.9,1.5,2
6.1,2.8,4.7,1.2,2
6.4,2.9,4.3,1.3,2
6.6,3.0,4.4,1.4,2
6.8,2.8,4.8,1.4,2
6.7,3.0,5.0,1.7,2
6.0,2.9,4.5,1.5,2
5.7,2.6,3.5,1.0,2
5.5,2.4,3.8,1.1,2
5.5,2.4,3.7,1.0,2
5.8,2.7,3.9,1.2,2
6.0,2.7,5.1,1.6,2
5.4,3.0,4.5,1.5,2
6.0,3.4,4.5,1.6,2
6.7,3.1,4.7,1.5,2
6.3,2.3,4.4,1.3,2
5.6,3.0,4.1,1.3,2
5.5,2.5,4.0,1.3,2
5.5,2.6,4.4,1.2,2
6.1,3.0,4.6,1.4,2
5.8,2.6,4.0,1.2,2
5.0,2.3,3.3,1.0,2
5.6,2.7,4.2,1.3,2
5.7,3.0,4.2,1.2,2
5.7,2.9,4.2,1.3,2
6.2,2.9,4.3,1.3,2
5.1,2.5,3.0,1.1,2
5.7,2.8,4.1,1.3,2
6.3,3.3,6.0,2.5,3
5.8,2.7,5.1,1.9,3
7.1,3.0,5.9,2.1,3
6.3,2.9,5.6,1.8,3
6.5,3.0,5.8,2.2,3
7.6,3.0,6.6,2.1,3
4.9,2.5,4.5,1.7,3
7.3,2.9,6.3,1.8,3
6.7,2.5,5.8,1.8,3
7.2,3.6,6.1,2.5,3
6.5,3.2,5.1,2.0,3
6.4,2.7,5.3,1.9,3
6.8,3.0,5.5,2.1,3
5.7,2.5,5.0,2.0,3
5.8,2.8,5.1,2.4,3
6.4,3.2,5.3,2.3,3
6.5,3.0,5.5,1.8,3
7.7,3.8,6.7,2.2,3
7.7,2.6,6.9,2.3,3
6.0,2.2,5.0,1.5,3
6.9,3.2,5.7,2.3,3
5.6,2.8,4.9,2.0,3
7.7,2.8,6.7,2.0,3
6.3,2.7,4.9,1.8,3
6.7,3.3,5.7,2.1,3
7.2,3.2,6.0,1.8,3
6.2,2.8,4.8,1.8,3
6.1,3.0,4.9,1.8,3
6.4,2.8,5.6,2.1,3
7.2,3.0,5.8,1.6,3
7.4,2.8,6.1,1.9,3
7.9,3.8,6.4,2.0,3
6.4,2.8,5.6,2.2,3
6.3,2.8,5.1,1.5,3
6.1,2.6,5.6,1.4,3
7.7,3.0,6.1,2.3,3
6.3,3.4,5.6,2.4,3
6.4,3.1,5.5,1.8,3
6.0,3.0,4.8,1.8,3
6.9,3.1,5.4,2.1,3
6.7,3.1,5.6,2.4,3
6.9,3.1,5.1,2.3,3
5.8,2.7,5.1,1.9,3
6.8,3.2,5.9,2.3,3
6.7,3.3,5.7,2.5,3
6.7,3.0,5.2,2.3,3
6.3,2.5,5.0,1.9,3
6.5,3.0,5.2,2.0,3
6.2,3.4,5.4,2.3,3
5.9,3.0,5.1,1.8,3];

% X = zeros(size(iris,1),size(iris,2)-1);
% for i = 1:size(iris,1)
%     z = iris(i,1:end-1);
%     X(i,:) =(z - min(z))/(max(z) - min(z)); 
% end


x1 = iris(:,1);
% z1 = x1;
% x1 = (z1 - min(z1))/(max(z1)-min(z1));
% clear z1;
x2 = iris(:,2);
% z2 = x2;
% x2 = (z2 - min(z2))/(max(z2)-min(z2));
% clear z2;
x3 = iris(:,3);
% z3 = x3;
% x3 = (z3 - min(z3))/(max(z3)-min(z3));
% clear z1;
x4 = iris(:,4);
% z4 = x4;
% x4 = (z4 - min(z4))/(max(z4)-min(z4));
% clear z4;
X = [x1 x2 x3 x4];
% X = iris(:,1:4);
X = X/norm(X);
% X = [X ones(size(X,1),1)];
X = X';



epoch = 30000;
alfa = 1e-2;
J = zeros(epoch, 1);
%Construção considerando os dados alocados vetores coluna
%Construção dos Pesos
W1 = rand(10, size(X,1));
W2 = rand(6, size(W1,1));
W3 = rand(3, size(W2,1));
W4 = rand(2, size(W3,1));
W5 = rand(size(W4))';
W6 = rand(size(W3))';
W7 = rand(size(W2))';
W8 = rand(size(W1))';
%Construção dos Bias
B1 = rand(size(W1,1),1);
B2 = rand(size(W2,1),1);
B3 = rand(size(W3,1),1);
B4 = rand(size(W4,1),1);
B5 = rand(size(W5,1),1);
B6 = rand(size(W6,1),1);
B7 = rand(size(W7,1),1);
B8 = rand(size(W8,1),1);
for ee = 1:epoch
    I = randperm(size(X,2));
    for i = 1:size(X,2)
        x = X(:,I(i));
        
        %passo forward
        a1 = tanh(W1*x + B1);
        a2 = tanh(W2*a1 + B2);
        a3 = tanh(W3*a2 + B3);
        a4 = tanh(W4*a3 + B4);
        a5 = tanh(W5*a4 + B5);
        a6 = tanh(W6*a5 + B6);
        a7 = tanh(W7*a6 + B7);
        a8 = tanh(W8*a7 + B8);
        
        %derivadas para o backpropagation
        a1_p = 1 - a1.^2;
        a2_p = 1 - a2.^2;
        a3_p = 1 - a3.^2;
        a4_p = 1 - a4.^2;
        a5_p = 1 - a5.^2;
        a6_p = 1 - a6.^2;
        a7_p = 1 - a7.^2;
        a8_p = 1 - a8.^2;
        
        %erro
        e = x-a8;
        delta_8 = e.*a8_p;
        dE_dW8 = delta_8*a7';
        dE_dB8 = delta_8;
        
        delta_7 = (W8'*delta_8).*a7_p;
        dE_dW7 = delta_7*a6';
        dE_dB7 = delta_7;
        
        delta_6 = (W7'*delta_7).*a6_p;
        dE_dW6 = delta_6*a5';
        dE_dB6 = delta_6;
        
        delta_5 = (W6'*delta_6).*a5_p;
        dE_dW5 = delta_5*a4';
        dE_dB5 = delta_5;
        
        delta_4 = (W5'*delta_5).*a4_p;
        dE_dW4 = delta_4*a3';
        dE_dB4 = delta_4;
        
        delta_3 = (W4'*delta_4).*a3_p;
        dE_dW3 = delta_3*a2';
        dE_dB3 = delta_3;
        
        delta_2 = (W3'*delta_3).*a2_p;
        dE_dW2 = delta_2*a1';
        dE_dB2 = delta_2;
        
        delta_1 = (W2'*delta_2).*a1_p;
        dE_dW1 = delta_1*x';
        dE_dB1 = delta_1;
        
        W1 = W1 + alfa*dE_dW1;
        W2 = W2 + alfa*dE_dW2;
        W3 = W3 + alfa*dE_dW3;
        W4 = W4 + alfa*dE_dW4;
        W5 = W5 + alfa*dE_dW5;
        W6 = W6 + alfa*dE_dW6;
        W7 = W7 + alfa*dE_dW7;
        W8 = W8 + alfa*dE_dW8;
        B1 = B1 + alfa*dE_dB1;
        B2 = B2 + alfa*dE_dB2;
        B3 = B3 + alfa*dE_dB3;
        B4 = B4 + alfa*dE_dB4;
        B5 = B5 + alfa*dE_dB5;
        B6 = B6 + alfa*dE_dB6;
        B7 = B7 + alfa*dE_dB7;
        B8 = B8 + alfa*dE_dB8;    
    end
    J(ee) = norm(e);
    plot(J)
    drawnow
end


yy2 = zeros(size(W4,1),size(X,2));
for i = 1:size(yy2,2)
yy2(:,i) = tanh(W4*(W3*tanh(W2*tanh(W1*X(:,i) + B1) + B2) + B3) + B4);
end

yy3 = zeros(size(W3,1),size(X,2));
for i = 1:size(yy3,2)
yy3(:,i) = tanh(W3*tanh(W2*tanh(W1*X(:,i) + B1) + B2) + B3);
end