clear all, clc

iris = [5.1,3.5,1.4,0.2,1
4.9,3.0,1.4,0.2,1
4.7,3.2,1.3,0.2,1
4.6,3.1,1.5,0.2,1
5.0,3.6,1.4,0.2,1
5.4,3.9,1.7,0.4,1
4.6,3.4,1.4,0.3,1
5.0,3.4,1.5,0.2,1
4.4,2.9,1.4,0.2,1
4.9,3.1,1.5,0.1,1
5.4,3.7,1.5,0.2,1
4.8,3.4,1.6,0.2,1
4.8,3.0,1.4,0.1,1
4.3,3.0,1.1,0.1,1
5.8,4.0,1.2,0.2,1
5.7,4.4,1.5,0.4,1
5.4,3.9,1.3,0.4,1
5.1,3.5,1.4,0.3,1
5.7,3.8,1.7,0.3,1
5.1,3.8,1.5,0.3,1
5.4,3.4,1.7,0.2,1
5.1,3.7,1.5,0.4,1
4.6,3.6,1.0,0.2,1
5.1,3.3,1.7,0.5,1
4.8,3.4,1.9,0.2,1
5.0,3.0,1.6,0.2,1
5.0,3.4,1.6,0.4,1
5.2,3.5,1.5,0.2,1
5.2,3.4,1.4,0.2,1
4.7,3.2,1.6,0.2,1
4.8,3.1,1.6,0.2,1
5.4,3.4,1.5,0.4,1
5.2,4.1,1.5,0.1,1
5.5,4.2,1.4,0.2,1
4.9,3.1,1.5,0.1,1
5.0,3.2,1.2,0.2,1
5.5,3.5,1.3,0.2,1
4.9,3.1,1.5,0.1,1
4.4,3.0,1.3,0.2,1
5.1,3.4,1.5,0.2,1
5.0,3.5,1.3,0.3,1
4.5,2.3,1.3,0.3,1
4.4,3.2,1.3,0.2,1
5.0,3.5,1.6,0.6,1
5.1,3.8,1.9,0.4,1
4.8,3.0,1.4,0.3,1
5.1,3.8,1.6,0.2,1
4.6,3.2,1.4,0.2,1
5.3,3.7,1.5,0.2,1
5.0,3.3,1.4,0.2,1
7.0,3.2,4.7,1.4,2
6.4,3.2,4.5,1.5,2
6.9,3.1,4.9,1.5,2
5.5,2.3,4.0,1.3,2
6.5,2.8,4.6,1.5,2
5.7,2.8,4.5,1.3,2
6.3,3.3,4.7,1.6,2
4.9,2.4,3.3,1.0,2
6.6,2.9,4.6,1.3,2
5.2,2.7,3.9,1.4,2
5.0,2.0,3.5,1.0,2
5.9,3.0,4.2,1.5,2
6.0,2.2,4.0,1.0,2
6.1,2.9,4.7,1.4,2
5.6,2.9,3.6,1.3,2
6.7,3.1,4.4,1.4,2
5.6,3.0,4.5,1.5,2
5.8,2.7,4.1,1.0,2
6.2,2.2,4.5,1.5,2
5.6,2.5,3.9,1.1,2
5.9,3.2,4.8,1.8,2
6.1,2.8,4.0,1.3,2
6.3,2.5,4.9,1.5,2
6.1,2.8,4.7,1.2,2
6.4,2.9,4.3,1.3,2
6.6,3.0,4.4,1.4,2
6.8,2.8,4.8,1.4,2
6.7,3.0,5.0,1.7,2
6.0,2.9,4.5,1.5,2
5.7,2.6,3.5,1.0,2
5.5,2.4,3.8,1.1,2
5.5,2.4,3.7,1.0,2
5.8,2.7,3.9,1.2,2
6.0,2.7,5.1,1.6,2
5.4,3.0,4.5,1.5,2
6.0,3.4,4.5,1.6,2
6.7,3.1,4.7,1.5,2
6.3,2.3,4.4,1.3,2
5.6,3.0,4.1,1.3,2
5.5,2.5,4.0,1.3,2
5.5,2.6,4.4,1.2,2
6.1,3.0,4.6,1.4,2
5.8,2.6,4.0,1.2,2
5.0,2.3,3.3,1.0,2
5.6,2.7,4.2,1.3,2
5.7,3.0,4.2,1.2,2
5.7,2.9,4.2,1.3,2
6.2,2.9,4.3,1.3,2
5.1,2.5,3.0,1.1,2
5.7,2.8,4.1,1.3,2
6.3,3.3,6.0,2.5,3
5.8,2.7,5.1,1.9,3
7.1,3.0,5.9,2.1,3
6.3,2.9,5.6,1.8,3
6.5,3.0,5.8,2.2,3
7.6,3.0,6.6,2.1,3
4.9,2.5,4.5,1.7,3
7.3,2.9,6.3,1.8,3
6.7,2.5,5.8,1.8,3
7.2,3.6,6.1,2.5,3
6.5,3.2,5.1,2.0,3
6.4,2.7,5.3,1.9,3
6.8,3.0,5.5,2.1,3
5.7,2.5,5.0,2.0,3
5.8,2.8,5.1,2.4,3
6.4,3.2,5.3,2.3,3
6.5,3.0,5.5,1.8,3
7.7,3.8,6.7,2.2,3
7.7,2.6,6.9,2.3,3
6.0,2.2,5.0,1.5,3
6.9,3.2,5.7,2.3,3
5.6,2.8,4.9,2.0,3
7.7,2.8,6.7,2.0,3
6.3,2.7,4.9,1.8,3
6.7,3.3,5.7,2.1,3
7.2,3.2,6.0,1.8,3
6.2,2.8,4.8,1.8,3
6.1,3.0,4.9,1.8,3
6.4,2.8,5.6,2.1,3
7.2,3.0,5.8,1.6,3
7.4,2.8,6.1,1.9,3
7.9,3.8,6.4,2.0,3
6.4,2.8,5.6,2.2,3
6.3,2.8,5.1,1.5,3
6.1,2.6,5.6,1.4,3
7.7,3.0,6.1,2.3,3
6.3,3.4,5.6,2.4,3
6.4,3.1,5.5,1.8,3
6.0,3.0,4.8,1.8,3
6.9,3.1,5.4,2.1,3
6.7,3.1,5.6,2.4,3
6.9,3.1,5.1,2.3,3
5.8,2.7,5.1,1.9,3
6.8,3.2,5.9,2.3,3
6.7,3.3,5.7,2.5,3
6.7,3.0,5.2,2.3,3
6.3,2.5,5.0,1.9,3
6.5,3.0,5.2,2.0,3
6.2,3.4,5.4,2.3,3
5.9,3.0,5.1,1.8,3];

% X = zeros(size(iris,1),size(iris,2)-1);
% for i = 1:size(iris,1)
%     z = iris(i,1:end-1);
%     X(i,:) =(z - min(z))/(max(z) - min(z)); 
% end


x1 = iris(:,1);
% z1 = x1;
% x1 = (z1 - min(z1))/(max(z1)-min(z1));
% clear z1;
x2 = iris(:,2);
% z2 = x2;
% x2 = (z2 - min(z2))/(max(z2)-min(z2));
% clear z2;
x3 = iris(:,3);
% z3 = x3;
% x3 = (z3 - min(z3))/(max(z3)-min(z3));
% clear z1;
x4 = iris(:,4);
% z4 = x4;
% x4 = (z4 - min(z4))/(max(z4)-min(z4));
% clear z4;
X = [x1 x2 x3 x4];
% X = iris(:,1:4);
X = X/norm(X);
X = [X ones(size(X,1),1)];
X = X';
y =  iris(:,5);



%Escopo do AutoEncoder Estocástico
epoch = 30000;%epocas de treinamento
alfa  = 1e-5;%taxa de aprendizado
W1 = rand(3, size(X,1));
W2 = rand(size(X,1), size(W1,1));
J = zeros(epoch,1);
%%Processo ded treinamento
for ee = 1:epoch
    I = randperm(size(X,2));
    for i = 1:size(X,2)
        x = X(:,I(i)); %amostra escolhida
        z1 = tanh(W1*x);
%        z2 = tanh(W2*z1);
%        z3 = tanh(W3*z2);
        %passo forward
        y = tanh(W2*z1);
        e = y-x;
        %back_prop
        %calculo das derivadas
        z1_p = tanh_prime(z1);
%        z2_p = tanh_prime(z2);
%        z3_p = tanh_prime(z3);
        y_p  = tanh_prime(y);
        %Escrevendo o produto em função dos termos de suas derivadas!!!
        delta_1 = e.*y_p;
        dE_dW2 = delta_1*z1';
%         dE_dW4 = dE_dW4/norm(dE_dW4);
%         delta_2 = (W4'*delta_1).*z3_p;
%         delta_2 = delta_2/norm(delta_2);
%         dE_dW3 = delta_2*z2';
%         dE_dW3 = dE_dW3/norm(dE_dW3);
%         delta_3 = (W3'*delta_2).*z2_p;
%         delta_3 = delta_3/norm(delta_3);
%         dE_dW2 = delta_3*z1';
%         dE_dW2 = dE_dW2/norm(dE_dW2);
        delta_2 = (W2'*delta_1).*z1_p;
        dE_dW1 = delta_2*x';
        %atualização
        W1 = W1 - alfa.*dE_dW1;
%         W2 = W2 - alfa.*dE_dW2*norm(e);
%         W3 = W3 - alfa.*dE_dW3*norm(e);
        W2 = W2 - alfa.*dE_dW2;
    end
    J(ee) = norm(e);
    plot(J)
    drawnow
end

%Reconstrução
yy = zeros(size(W1,1),size(X,2));
for i = 1:size(yy,2)
yy(:,i) = tanh(W1*X(:,i));
end
figure
scatter3(yy(1,1:50),yy(2,1:50),yy(3,1:50), 'b')
hold on
scatter3(yy(1,51:100),yy(2,51:100),yy(3,51:100), 'r')
scatter3(yy(1,101:150),yy(2,101:150),yy(3,101:150), 'g')


